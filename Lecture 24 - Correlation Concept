Correlation
It measures the strength and direction od a linear relationship between two variables.

Formulas:
1. Pearson Correlation Cofficient(r):(watch it from google)
2. 

Concepts:
- Strength of Relationship: The correlation coffecient ranges from -1 to +1 A value close to +1 impiles a strong positive relationship, 
  close negative relationship, and around 0 implies no linear relationship.
- Direction of Relationship: Indicates whether the variables increases together (Positive) or one increases, the other decreases (negative).

Real-life Use Case:
- Determining the relationship between the consumer income and expenditure on luxury items.
- In finance, correlating differnt stock movements to diversity the portfolio.

Correlation Matrix
A correlation matrix displays correlation cofficients between sets of variables. Each cell in the matrix represents the correlation between
two variables. the value ranges from -1 to +1, where:
- +1 indicates a perfect positive linear relationship,
- -1 indicates a perfect negative linear relationship,
- 0 indicates no linear relationship.

Real-life Use Cases
1.Finance
2.Marketing
3.Healtcare

Types of Correlation Cofficient
1. Pearson Correlation Cofficient
2. Spearman's Rank Correlation Cofficient
3. Kendall's Tau

#Correlation Implementation 

imoprt pandas as pd
import numpyb as np

#Seed for reproducibility
np.random.seed(42)

#Generate sample data
data = {
     'Age': np.random.normal(30,10,100).astype(int),
     'Annual Income (K$)': np.random.normal(50,20,100).astype(int),
     'Spending Score (1-100)': np.random.randint(1,100,100),\
     'Years with company': np.random.normal(5,2,100).astype(int)
}

#Create DataFrame
df = pd.DataFrame(data)

df

pip install tabulate

from tabulate import tabulate 

correlation_matrix = df.corr()

#print the correlation matrix as a table
print(tabulate(correlation_matrix, headers='keys', tablefmt='grid', numalign='right', floatfmt='.2f'))
